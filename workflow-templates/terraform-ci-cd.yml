name: ci-cd

on:
  push:
    branches:
      [ $default-branch ]
  pull_request:
    branches:
      [ $default-branch ]
    types: [opened, synchronize, reopened]

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  init-validate-plan:
    uses: TAG-APAC-Division/platform-reusable-workflows/.github/workflows/terraform-ci.yml@v0.4.2
    with:
      resource_group_name: RESOURCE_GROUP_NAME
      storage_account_name: STORAGE_ACCOUNT_NAME
      container_name: CONTAINER_NAME
      tf_state_file_name: TF_STATE_FILE_NAME
    secrets:
      gh_token: ${{ secrets.GITHUB_TOKEN }}
      tf_access_key: ${{ secrets.TF_AZ_STORAGE_ACCESS_KEY }}
      gh_tf_modules_token: ${{ secrets.GH_TF_MODULES_TOKEN }}

  init-apply:
    uses: TAG-APAC-Division/platform-reusable-workflows/.github/workflows/terraform-cd.yml@v0.4.2
    needs: init-validate-plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && needs.init-validate-plan.outputs.plan_exitcode == 2
    with:
      resource_group_name: RESOURCE_GROUP_NAME
      storage_account_name: STORAGE_ACCOUNT_NAME
      container_name: CONTAINER_NAME
      tf_state_file_name: TF_STATE_FILE_NAME
      environment: Development
    secrets:
      gh_token: ${{ secrets.GITHUB_TOKEN }}
      tf_access_key: ${{ secrets.TF_AZ_STORAGE_ACCESS_KEY }}
      gh_tf_modules_token: ${{ secrets.GH_TF_MODULES_TOKEN }}